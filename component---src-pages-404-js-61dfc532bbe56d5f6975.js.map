{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Title.js","webpack:///./src/components/AppContainer.js","webpack:///./src/components/Heading.js","webpack:///./src/components/Grid.js","webpack:///./src/components/Layout.js"],"names":["__webpack_exports__","default","_ref","location","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","215","n","e","t","r","i","Title","h1","_templateObject","o","216","u","c","l","m","components_AppContainer","styled_components_browser_es","div","components_Heading","h3","Heading_templateObject","GridContainer","Grid_templateObject","FlexRow","_templateObject2","colors","borders","randomElement","array","Math","floor","random","length","components_Grid","render","react_default","Array","fill","map","_","id","Cell","_templateObject3","key","className","Content","Object","Layout_templateObject","IndexContent","Layout_templateObject2","Layout_getTitle","isIndex","gatsby_link_default","to","children","pathname"],"mappings":"8HASAA,EAAAC,QANqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACnBC,EAAAC,EAAAC,cAACC,EAAAF,GAAOF,SAAWA,GACjBC,EAAAC,EAAAC,cAAA,0DAAAE,IAAA,SAAAC,EAAAC,EAAAC,GAAA,iBAAAC,EAAAD,EAAA,KAAAN,EAAAM,EAAAF,EAAAG,GAAA,SAAAC,IAAA,IAAAJ,EAAAJ,KAAA,2KAAAQ,EAAA,kBAAAJ,KAAAE,EAAA,GCFJ,IAAMG,SAAQT,EAAOU,GAAfC,KAaNhB,EAAAK,EAAAY,GAAAC,IAAA,SAAAT,EAAAC,EAAAC,GAAA,iBAAAC,EAAAD,EAAA,KAAAN,EAAAM,EAAAF,EAAAG,GAAAC,EAAAF,EAAA,GAAAM,EAAAN,EAAAF,EAAAI,GAAAM,EAAAR,EAAA,KAAAS,EAAAT,EAAAF,EAAAU,GAAAE,EAAAV,EAAA,cAAAW,IAAA,IAAAb,EAAAJ,KAAA,mFAAAiB,EAAA,kBAAAb,KCbA,IAMAc,EANqBC,EAAAnB,EAAOoB,IAAtBT,kGCAN,IAIAU,EAJgBF,EAAAnB,EAAOsB,GAAjBC,0xBCAN,IAAMC,EAAgBL,EAAAnB,EAAOoB,IAAvBK,KAsBAC,EAAUP,EAAAnB,EAAOoB,IAAjBO,KASAC,GACF,mBACA,kBACA,qBACA,oBACA,qBAGEC,GACF,aACA,aACA,aACA,cAGEC,EAAgB,SAACC,GAAD,OAAWA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAsBxEC,EATa,SAAAvC,GAAA,IAAGwC,EAAHxC,EAAGwC,OAAH,OACXC,EAAAtC,EAAAC,cAACyB,EAAD,KACEY,EAAAtC,EAAAC,cAACuB,EAAD,KAJqB,IAAIe,MAAM,KAAMC,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAAJ,OATpC,SAACA,GAChB,IAAMC,EAAOzB,EAAAnB,EAAOoB,IAAdyB,IACWf,EAAcF,GACXE,EAAcD,IAGlC,OAAOS,EAAAtC,EAAAC,cAAC2C,GAAKE,IAAMH,EAAKI,UAAU,SANnB,CASwDJ,MAOnEN,2YC1DN,IAAMW,EAAUC,OAAA9B,EAAAnB,EAAAiD,CAAO/B,EAAP+B,CAAVC,KAQAC,EAAeF,OAAA9B,EAAAnB,EAAAiD,CAAOD,EAAPC,CAAfG,KAWAC,EAAW,SAACC,GAAD,OAAaA,EAExBhB,EAAAtC,EAAAC,cAACQ,EAAAT,EAAD,KACEsC,EAAAtC,EAAAC,cAACsD,EAAAvD,GAAKwD,GAAK,KAAX,cAMFlB,EAAAtC,EAAAC,cAACoB,EAAD,KACEiB,EAAAtC,EAAAC,cAACsD,EAAAvD,GAAKwD,GAAK,KAAX,eAgCR7D,EAAAK,EAVe,SAAAH,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAU2D,EAAe5D,EAAf4D,SACpBH,EAAgC,MAAtBxD,EAAS4D,SAEzB,OACEpB,EAAAtC,EAAAC,cAAA,WApBe,SAACqD,EAASG,GAAV,OAAuBH,EAEhChB,EAAAtC,EAAAC,cAACmC,GAAKC,OAAQ,kBACZC,EAAAtC,EAAAC,cAACkD,EAAD,KACIE,EAASC,GACTG,MAKNnB,EAAAtC,EAAAC,cAAC+C,EAAD,KACIK,EAASC,GACTG,GAZK,CAqBAH,EAASG","file":"component---src-pages-404-js-61dfc532bbe56d5f6975.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\n\nconst NotFoundPage = ({ location }) => (\n  <Layout location={ location }>\n    <p>You just hit a route that doesn&#39;t exist...</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n  font-size: 2.8rem;\n  line-height 3.6rem;\n  & a {\n    color: black;\n  }\n\n  @media (max-width: 50rem) {\n    margin-top: 0;\n  }\n`\n\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\n\nconst AppContainer = styled.div`\n  margin: 0 auto;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nexport default AppContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Heading = styled.h3`\n  margin-bottom: 0;\n`\n\nexport default Heading;","import React from 'react'\nimport styled from 'styled-components'\n\nconst GridContainer = styled.div`\n  display: grid;\n  height: 20vw;\n  width: 100vw;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n\n  @media (min-aspect-ratio: 1/1) {\n    position: fixed;\n    height: 100vw;\n    width: 20vw;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-aspect-ratio: 3/2) {\n    width: 30vw;\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n`\n\nconst FlexRow = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-aspect-ratio: 1/1) {\n    flex-direction: row;\n  }\n`\n\nconst colors =\n  [ 'rgb(1, 186, 239)'\n  , 'rgb(31, 32, 65)'\n  , 'rgb(235, 186, 185)'\n  , 'rgb(17, 157, 164)'\n  , 'rgb(25, 100, 126)'\n  ]\n\nconst borders =\n  [ '100% 0 0 0'\n  , '0 100% 0 0'\n  , '0 0 100% 0'\n  , '0 0 0 100%'\n  ]\n\nconst randomElement = (array) => array[Math.floor(Math.random() * array.length)]\n\nconst makeCell = (id) => {\n  const Cell = styled.div`\n    background: ${ randomElement(colors) };\n    border-radius: ${ randomElement(borders) };\n  `\n\n  return <Cell key={ id } className='cell' />\n}\n\nconst makeCells = () => (new Array(100)).fill(0).map((_, id) => makeCell(id))\n\nconst Grid = ({ render }) => (\n  <FlexRow>\n    <GridContainer>\n        { makeCells() }\n    </GridContainer>\n    { render() }\n  </FlexRow>\n)\n\nexport default Grid\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled, { keyframes } from 'styled-components'\n\nimport AppContainer from './AppContainer'\nimport Title from './Title'\nimport Heading from './Heading'\nimport Grid from './Grid'\n\nconst Content = styled(AppContainer)`\n  font-size: 1.1rem;\n  background-color: white;\n  max-width: 50rem;\n  padding: 2rem;\n  margin: auto;\n`\n\nconst IndexContent = styled(Content)`\n  @media (min-aspect-ratio: 1/1) {\n    padding: 8rem 4rem;\n    margin-left: 20vw;\n  }\n\n  @media (min-aspect-ratio: 3/2) {\n    margin-left: 30vw;\n  }\n`\n\nconst getTitle = (isIndex) => isIndex\n  ? (\n      <Title>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Title>\n    )\n  : (\n      <Heading>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Heading>\n    )\n\nconst getContent = (isIndex, children) => isIndex\n      ? (\n          <Grid render={() => (\n            <IndexContent>\n              { getTitle(isIndex) }\n              { children }\n            </IndexContent>\n          )}/>\n      )\n      : (\n          <Content>\n            { getTitle(isIndex) }\n            { children }\n          </Content>\n        )\n\nconst Layout = ({ location, children }) => {\n  const isIndex = location.pathname === '/'\n\n  return (\n    <div>\n      { getContent(isIndex, children) }\n    </div>\n  )\n}\n\nexport default Layout\n\n\n"],"sourceRoot":""}