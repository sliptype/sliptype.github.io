{"version":3,"sources":["webpack:///./src/pages/index_two.js","webpack:///./src/components/Title.js","webpack:///./src/components/Background.js","webpack:///./src/components/AppContainer.js","webpack:///./src/components/Social.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Layout.js"],"names":["PostTitle","styled_components__WEBPACK_IMPORTED_MODULE_5__","a","h3","_templateObject","__webpack_exports__","default","props","siteTitle","data","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","_components_Bio__WEBPACK_IMPORTED_MODULE_7__","map","_ref","node","lodash_get__WEBPACK_IMPORTED_MODULE_3___default","fields","slug","key","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","style","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery","Title","h1","u","217","n","e","t","r","i","l","o","c","BackgroundContainer","styled_components__WEBPACK_IMPORTED_MODULE_3__","div","colors","borders","randomElement","array","Math","floor","random","length","react__WEBPACK_IMPORTED_MODULE_2___default","Array","fill","_","id","Cell","_templateObject2","makeCells","AppContainer","220","m","f","d","SocialUl","styled_components_browser_es","ul","SocialLi","li","SocialLiFirst","Object","_templateObject3","SocialLiLast","_templateObject4","SocialA","_templateObject5","components_Social","react_default","href","E","BioContainer","Bio_templateObject","227","229","231","232","s","v","h","g","Content","_AppContainer__WEBPACK_IMPORTED_MODULE_4__","FlexContainer","slideIn","b","children","_Background__WEBPACK_IMPORTED_MODULE_6__","_Title__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"component---src-pages-index-two-js-48f57f43099f86da1cf9.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport Bio from '../components/Bio'\nimport 'normalize.css'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport '../styles.css'\n\nconst PostTitle = styled.h3`\n  margin-bottom: 0;\n`\n\nconst Index = (props) => {\n\n  const siteTitle = props.data.site.siteMetadata.title\n  const posts = props.data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={props.location}>\n      <Helmet>\n        <title>{siteTitle}</title>\n      </Helmet>\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <div key={node.fields.slug}>\n            <PostTitle>\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </PostTitle>\n            <small>{node.frontmatter.date}</small>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query TestQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n  font-size: 2.8rem;\n  line-height 3.6rem;\n  & a {\n    color: black;\n  }\n\n  @media (max-width: 50rem) {\n    margin-top: 0;\n  }\n`\n\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\n\nconst BackgroundContainer = styled.div`\n  width: 100vw;\n  height: 100vw;\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  margin-bottom: 3rem;\n  z-index: 1;\n`\n\nconst colors = [\n  'rgba(1, 186, 239)'\n  ,'rgba(31, 32, 65)'\n  ,'rgb(235, 186, 185)'\n  ,'rgba(17, 157, 164)'\n  ,'rgba(25, 100, 126)'\n]\n\nconst borders = [\n  '100% 0 0 0'\n  ,'0 100% 0 0'\n  ,'0 0 100% 0'\n  ,'0 0 0 100%'\n]\n\nconst randomElement = (array) => array[Math.floor(Math.random() * array.length)];\n\nconst makeCell = (id) => {\n  const Cell = styled.div`\n    background: ${ randomElement(colors) };\n    border-radius: ${ randomElement(borders) };\n  `\n\n  return <Cell key={ id }/>\n}\n\nconst makeCells = () => (new Array(100)).fill(0).map((_, id) => makeCell(id));\n\nconst Background = () => (\n  <BackgroundContainer>\n    { makeCells() }\n  </BackgroundContainer>\n)\n\nexport default Background\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst AppContainer = styled.div`\n  margin: 0 auto;\n  max-width: 50rem;\n  padding: 2rem 2rem;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nexport default AppContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst SocialUl = styled.ul`\n  margin: 1em 0 0 0;\n  padding: 0;\n  font-size: .85em;\n  display: flex;\n\n  & li + li {\n    border-left: transparent;\n  }\n`\n\nconst SocialLi = styled.li`\n  display: inline;\n  border: 1px solid rgba(6, 57, 78, 0.27);\n`\n\nconst SocialLiFirst = styled(SocialLi)`\n  border-radius: 4px 0 0 4px\n`\n\nconst SocialLiLast = styled(SocialLi)`\n  border-radius: 0 4px 4px 0\n`\n\nconst SocialA = styled.a`\n  padding: .4em 1em;\n  color: rgba(6, 57, 78, 0.5);\n  display: block;\n  font-size: .9em;\n\n  &:hover {\n    color: rgba(6, 57, 78, 1);\n  }\n`\n\nconst Social = () => (\n  <SocialUl>\n    <SocialLiFirst>\n      <SocialA href=\"https://github.com/sliptype\">Github</SocialA>\n    </SocialLiFirst>\n    <SocialLi>\n      <SocialA href=\"https://gitlab.com/sliptype\">Gitlab</SocialA>\n    </SocialLi>\n    <SocialLiLast>\n      <SocialA href=\"https://stackoverflow.com/users/5705462/sliptype\">Stack</SocialA>\n    </SocialLiLast>\n  </SocialUl>\n)\n\nexport default Social\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Social from './Social'\n\nconst BioContainer = styled.div`\n  margin-bottom: 3rem;\n`\n\nconst Bio = () => (\n  <BioContainer>\n    <p>\n      Hi! I'm Sebastian Klingler. I'm a front-end engineer with a passion for building effective & maintainable systems.\n    </p>\n    <Social />\n  </BioContainer>\n)\n\nexport default Bio\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled, { keyframes } from 'styled-components'\n\nimport AppContainer from './AppContainer'\nimport Title from './Title'\nimport Background from './Background'\n\nconst Content = styled(AppContainer)`\n  position: relative;\n  margin: -10rem auto 0;\n\n  @media (max-width: 50rem) {\n    margin: 0 auto;\n  }\n\n  max-width: 50rem;\n  padding: 2rem 2rem;\n  z-index: 2;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nconst FlexContainer = styled.div`\n  display: flex;\n`\n\nconst slideIn = keyframes`\n  to {\n    height: 25vw;\n    max-height: 50vh;\n    min-height: 5vh;\n  }\n`\n\nconst BackgroundContainer = styled.div`\n  height: 100vh;\n  max-height: 100vh;\n  min-height: 0vh;\n  overflow: hidden;\n  animation: ${slideIn} .5s ease-in-out forwards;\n`\n\nconst getRootPath = () => {\n  if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n    return __PREFIX_PATHS__ + `/`\n  }\n\n  return `/`\n}\n\nconst Layout = ({ children }) => (\n  <div>\n    <BackgroundContainer>\n      <Background />\n    </BackgroundContainer>\n    <Content>\n      <FlexContainer>\n        <Title>\n          <Link to={ '/' }>\n            @sliptype\n          </Link>\n        </Title>\n      </FlexContainer>\n      { children }\n    </Content>\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}