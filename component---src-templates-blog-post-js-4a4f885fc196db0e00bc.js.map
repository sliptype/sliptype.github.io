{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Title.js","webpack:///./src/components/AppContainer.js","webpack:///./src/components/Heading.js","webpack:///./src/components/Grid.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Social.js","webpack:///./src/components/Bio.js"],"names":["__webpack_exports__","default","_ref","_ref$data","data","metadata","site","siteMetadata","post","markdownRemark","location","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","title","frontmatter","_components_Title__WEBPACK_IMPORTED_MODULE_6__","date","dangerouslySetInnerHTML","__html","html","pageQuery","Title","h1","_templateObject","u","216","n","e","t","r","i","l","o","c","m","components_AppContainer","styled_components_browser_es","div","components_Heading","h3","Heading_templateObject","GridContainer","Grid_templateObject","colors","borders","randomElement","array","Math","floor","random","length","components_Grid","render","react_default","Array","fill","map","_","id","Cell","_templateObject2","key","className","makeCells","Content","Object","Layout_templateObject","Layout_getTitle","Layout_templateObject2","isIndex","gatsby_link_default","to","children","pathname","SocialUl","ul","SocialLi","li","SocialLiFirst","_templateObject3","SocialLiLast","_templateObject4","SocialA","_templateObject5","components_Social","href","E","BioContainer","Bio_templateObject"],"mappings":"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","file":"component---src-templates-blog-post-js-4a4f885fc196db0e00bc.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport Title from '../components/Title'\nimport Bio from '../components/Bio'\n\nconst BlogPostTemplate =\n  ({\n    data: {\n      site: {\n        siteMetadata: metadata\n      },\n      markdownRemark: post\n    },\n    location\n  }) => (\n    <Layout location={ location }>\n      <Helmet title={`${ post.frontmatter.title } | ${ metadata.title }`} />\n      <Title>{ post.frontmatter.title }</Title>\n      <small>\n        { post.frontmatter.date }\n      </small>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  )\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n  font-size: 2.8rem;\n  line-height 3.6rem;\n  & a {\n    color: black;\n  }\n\n  @media (max-width: 50rem) {\n    margin-top: 0;\n  }\n`\n\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\n\nconst AppContainer = styled.div`\n  margin: 0 auto;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nexport default AppContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Heading = styled.h3`\n  margin-bottom: 0;\n`\n\nexport default Heading;","import React from 'react'\nimport styled from 'styled-components'\n\nconst GridContainer = styled.div`\n  width: 100vw;\n  height: 100vw;\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  margin-bottom: 3rem;\n  z-index: 1;\n`\n\nconst colors =\n  [ 'rgb(1, 186, 239)'\n  , 'rgb(31, 32, 65)'\n  , 'rgb(235, 186, 185)'\n  , 'rgb(17, 157, 164)'\n  , 'rgb(25, 100, 126)'\n  ]\n\nconst borders =\n  [ '100% 0 0 0'\n  , '0 100% 0 0'\n  , '0 0 100% 0'\n  , '0 0 0 100%'\n  ]\n\nconst randomElement = (array) => array[Math.floor(Math.random() * array.length)]\n\nconst makeCell = (id) => {\n  const Cell = styled.div`\n    background: ${ randomElement(colors) };\n    border-radius: ${ randomElement(borders) };\n  `\n\n  return <Cell key={ id } className='cell' />\n}\n\nconst makeCells = () => (new Array(100)).fill(0).map((_, id) => makeCell(id))\n\nconst Grid = ({ render }) => (\n  <GridContainer>\n    { render() }\n    { makeCells() }\n  </GridContainer>\n)\n\nexport default Grid\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled, { keyframes } from 'styled-components'\n\nimport AppContainer from './AppContainer'\nimport Title from './Title'\nimport Heading from './Heading'\nimport Grid from './Grid'\n\nconst Content = styled(AppContainer)`\n  max-width: 50rem;\n\n  grid-column: 1 / span 10;\n  grid-row: 3 / span 10;\n  padding: 2rem;\n\n  @media (min-width: 50rem) {\n    padding: 4rem;\n  }\n\n  @media (min-width: 80rem) {\n    grid-column: 3 / span 6;\n    grid-row: 2 / span 10;\n  }\n\n  @media (min-width: 170rem) {\n    grid-column: 4 / span 4;\n    grid-row: 2 / span 10;\n  }\n\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nconst BackgroundContainer = styled.div`\n`\n\nconst getTitle = (isIndex) => isIndex\n  ? (\n      <Title>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Title>\n    )\n  : (\n      <Heading>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Heading>\n    )\n\nconst getContent = (isIndex, children) => isIndex\n      ? (\n          <Grid render={() => (\n            <Content>\n              { getTitle(isIndex) }\n              { children }\n            </Content>\n          )}/>\n      )\n      : (\n          <Content>\n            { getTitle(isIndex) }\n            { children }\n          </Content>\n        )\n\nconst Layout = ({ location, children }) => {\n  const isIndex = location.pathname === '/'\n\n  return (\n    <div>\n      { getContent(isIndex, children) }\n    </div>\n  )\n}\n\nexport default Layout\n\n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst SocialUl = styled.ul`\n  margin: 1em 0 0 0;\n  padding: 0;\n  font-size: .85em;\n  display: flex;\n\n  & li + li {\n    border-left: transparent;\n  }\n`\n\nconst SocialLi = styled.li`\n  display: inline;\n  border: 1px solid rgba(6, 57, 78, 0.27);\n`\n\nconst SocialLiFirst = styled(SocialLi)`\n  border-radius: 4px 0 0 4px\n`\n\nconst SocialLiLast = styled(SocialLi)`\n  border-radius: 0 4px 4px 0\n`\n\nconst SocialA = styled.a`\n  padding: .4em 1em;\n  color: rgba(6, 57, 78, 0.5);\n  display: block;\n  font-size: .9em;\n\n  &:hover {\n    color: rgba(6, 57, 78, 1);\n  }\n`\n\nconst Social = () => (\n  <SocialUl>\n    <SocialLiFirst>\n      <SocialA href=\"https://github.com/sliptype\">Github</SocialA>\n    </SocialLiFirst>\n    <SocialLi>\n      <SocialA href=\"https://gitlab.com/sliptype\">Gitlab</SocialA>\n    </SocialLi>\n    <SocialLiLast>\n      <SocialA href=\"https://stackoverflow.com/users/5705462/sliptype\">Stack</SocialA>\n    </SocialLiLast>\n  </SocialUl>\n)\n\nexport default Social\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Social from './Social'\n\nconst BioContainer = styled.div`\n  margin-bottom: 3rem;\n`\n\nconst Bio = () => (\n  <BioContainer>\n    <p>\n      Hi! I'm Sebastian Klingler. I'm a UI engineer with a passion for building effective & maintainable systems.\n    </p>\n    <Social />\n  </BioContainer>\n)\n\nexport default Bio\n"],"sourceRoot":""}