{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Title.js","webpack:///./src/components/AppContainer.js","webpack:///./src/components/Heading.js","webpack:///./src/components/Background.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Social.js","webpack:///./src/components/Bio.js"],"names":["__webpack_exports__","default","_ref","_ref$data","data","metadata","site","siteMetadata","post","markdownRemark","location","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","title","frontmatter","_components_Title__WEBPACK_IMPORTED_MODULE_6__","date","dangerouslySetInnerHTML","__html","html","pageQuery","Title","h1","_templateObject","u","216","n","e","t","r","i","o","l","c","m","components_AppContainer","styled_components_browser_es","div","components_Heading","h3","Heading_templateObject","BackgroundContainer","Background_templateObject","colors","borders","randomElement","array","Math","floor","random","length","components_Background","react_default","Array","fill","map","_","id","Cell","_templateObject2","key","makeCells","Content","Object","Layout_templateObject","Layout_BackgroundContainer","b","Layout_templateObject2","_templateObject3","children","isIndex","pathname","gatsby_link_default","to","SocialUl","ul","SocialLi","li","SocialLiFirst","SocialLiLast","_templateObject4","SocialA","_templateObject5","components_Social","href","E","BioContainer","Bio_templateObject"],"mappings":"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","file":"component---src-templates-blog-post-js-4dd923e0c8eaad6e428e.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport Title from '../components/Title'\nimport Bio from '../components/Bio'\n\nconst BlogPostTemplate =\n  ({\n    data: {\n      site: {\n        siteMetadata: metadata\n      },\n      markdownRemark: post \n    },\n    location\n  }) => (\n    <Layout location={ location }>\n      <Helmet title={`${ post.frontmatter.title } | ${ metadata.title }`} />\n      <Title>{ post.frontmatter.title }</Title>\n      <small>\n        { post.frontmatter.date }\n      </small>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  )\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  margin-bottom: 0;\n  font-size: 2.8rem;\n  line-height 3.6rem;\n  & a {\n    color: black;\n  }\n\n  @media (max-width: 50rem) {\n    margin-top: 0;\n  }\n`\n\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\n\nconst AppContainer = styled.div`\n  margin: 0 auto;\n  max-width: 50rem;\n  padding: 2rem 2rem;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nexport default AppContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Heading = styled.h3`\n  margin-bottom: 0;\n`\n\nexport default Heading;","import React from 'react'\nimport styled from 'styled-components'\n\nconst BackgroundContainer = styled.div`\n  width: 100vw;\n  height: 100vw;\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  margin-bottom: 3rem;\n  z-index: 1;\n`\n\nconst colors = [\n  'rgba(1, 186, 239)'\n  ,'rgba(31, 32, 65)'\n  ,'rgb(235, 186, 185)'\n  ,'rgba(17, 157, 164)'\n  ,'rgba(25, 100, 126)'\n]\n\nconst borders = [\n  '100% 0 0 0'\n  ,'0 100% 0 0'\n  ,'0 0 100% 0'\n  ,'0 0 0 100%'\n]\n\nconst randomElement = (array) => array[Math.floor(Math.random() * array.length)];\n\nconst makeCell = (id) => {\n  const Cell = styled.div`\n    background: ${ randomElement(colors) };\n    border-radius: ${ randomElement(borders) };\n  `\n\n  return <Cell key={ id }/>\n}\n\nconst makeCells = () => (new Array(100)).fill(0).map((_, id) => makeCell(id));\n\nconst Background = () => (\n  <BackgroundContainer>\n    { makeCells() }\n  </BackgroundContainer>\n)\n\nexport default Background\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled, { keyframes } from 'styled-components'\n\nimport AppContainer from './AppContainer'\nimport Title from './Title'\nimport Heading from './Heading'\nimport Background from './Background'\n\nconst Content = styled(AppContainer)`\n  position: relative;\n  margin: 0 auto 0;\n\n  @media (max-width: 50rem) {\n    margin: 0 auto;\n  }\n\n  max-width: 50rem;\n  padding: 2rem 2rem;\n  z-index: 2;\n  font-size: 1.1rem;\n  background-color: white;\n`\n\nconst slideIn = keyframes`\n  to {\n    height: 25vw;\n    max-height: 50vh;\n    min-height: 5vh;\n  }\n`\n\nconst BackgroundContainer = styled.div`\n  overflow: hidden;\n  height: 25vw;\n  @media (min-width: 50rem) {\n    margin-bottom: -10rem;\n  }\n`\n\nconst getTitle = (isIndex) => isIndex\n  ? (\n      <Title>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Title>\n    )\n  : (\n      <Heading>\n        <Link to={ '/' }>\n          @sliptype\n        </Link>\n      </Heading>\n    )\n\nconst getBackground = (isIndex) => isIndex\n  ? (\n      <BackgroundContainer>\n        <Background />\n      </BackgroundContainer>\n    )\n  : null\n\nconst Layout = ({ location, children }) => {\n  const isIndex = location.pathname === '/'\n\n  return (\n    <div>\n      { getBackground(isIndex) }\n      <Content>\n        { getTitle(isIndex) }\n        { children }\n      </Content>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst SocialUl = styled.ul`\n  margin: 1em 0 0 0;\n  padding: 0;\n  font-size: .85em;\n  display: flex;\n\n  & li + li {\n    border-left: transparent;\n  }\n`\n\nconst SocialLi = styled.li`\n  display: inline;\n  border: 1px solid rgba(6, 57, 78, 0.27);\n`\n\nconst SocialLiFirst = styled(SocialLi)`\n  border-radius: 4px 0 0 4px\n`\n\nconst SocialLiLast = styled(SocialLi)`\n  border-radius: 0 4px 4px 0\n`\n\nconst SocialA = styled.a`\n  padding: .4em 1em;\n  color: rgba(6, 57, 78, 0.5);\n  display: block;\n  font-size: .9em;\n\n  &:hover {\n    color: rgba(6, 57, 78, 1);\n  }\n`\n\nconst Social = () => (\n  <SocialUl>\n    <SocialLiFirst>\n      <SocialA href=\"https://github.com/sliptype\">Github</SocialA>\n    </SocialLiFirst>\n    <SocialLi>\n      <SocialA href=\"https://gitlab.com/sliptype\">Gitlab</SocialA>\n    </SocialLi>\n    <SocialLiLast>\n      <SocialA href=\"https://stackoverflow.com/users/5705462/sliptype\">Stack</SocialA>\n    </SocialLiLast>\n  </SocialUl>\n)\n\nexport default Social\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Social from './Social'\n\nconst BioContainer = styled.div`\n  margin-bottom: 3rem;\n`\n\nconst Bio = () => (\n  <BioContainer>\n    <p>\n      Hi! I'm Sebastian Klingler. I'm a UI engineer with a passion for building effective & maintainable systems.\n    </p>\n    <Social />\n  </BioContainer>\n)\n\nexport default Bio\n"],"sourceRoot":""}