{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.number.parse-int.js","webpack:///./node_modules/core-js/modules/_parse-int.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["$export","$parseInt","S","F","Number","parseInt","$trim","trim","ws","hex","module","exports","str","radix","string","String","test","PostTitle","styled","h3","ReadMoreLink","span","MorePostsLink","div","postThreshold","pageIndex","Index","props","location","siteTitle","data","site","siteMetadata","title","posts","allMarkdownRemark","edges","hash","replace","isFirstPage","to","threshold","slice","slicePosts","map","node","get","fields","slug","key","style","boxShadow","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","length","isLastPage","pageQuery","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","it","third","maxCode","first","charCodeAt","NaN","code","digits","i","l","value","arguments","that","this","valueOf","call","keys","split","j","constructor"],"mappings":"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","file":"component---src-pages-index-js-7c5acec4f3abc72fdf27.js","sourcesContent":["var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport Bio from '../components/Bio'\nimport 'normalize.css'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport '../styles.css'\n\nconst PostTitle = styled.h3`\n  margin-bottom: 0;\n`\n\nconst ReadMoreLink = styled.span`\n  margin: 0 1rem;\n`\n\nconst MorePostsLink = styled.div`\n  margin: 0 0 2rem;\n`\n\nconst postsPerPage = 3;\n\nconst getPageIndex = (location) => Number.parseInt(location.hash.replace('#', ''));\n\nconst postThreshold = (pageIndex) => (pageIndex + 1) * postsPerPage\n\nconst slicePosts = (posts, pageIndex) => {\n  const threshold = postThreshold(pageIndex)\n  return posts.slice(threshold - postsPerPage, threshold)\n}\n\nconst isFirstPage = (pageIndex) => pageIndex === 0\nconst isLastPage = (posts, pageIndex) => posts.length <= postThreshold(pageIndex)\n\nconst Index = (props) => {\n\n  const siteTitle = props.data.site.siteMetadata.title\n  const posts = props.data.allMarkdownRemark.edges\n  const pageIndex = props.location.hash ? getPageIndex(props.location) : 0\n\n  return (\n    <Layout location={props.location}>\n      <Helmet>\n        <title>{siteTitle}</title>\n      </Helmet>\n      <Bio />\n      { !isFirstPage(pageIndex)\n        &&\n        <Link to={ `#${ pageIndex - 1 }` }>\n        <MorePostsLink>\n          Newer Posts...\n        </MorePostsLink>\n        </Link>\n      }\n      {slicePosts(posts, pageIndex).map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <div key={node.fields.slug}>\n            <PostTitle>\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </PostTitle>\n            <small>{node.frontmatter.date}</small>\n            <p>\n              <span dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              <Link to={node.fields.slug}>\n                <ReadMoreLink>\n                  Read More\n                </ReadMoreLink>\n              </Link>\n            </p>\n          </div>\n        )\n      })}\n      { !isLastPage(posts, pageIndex)\n        &&\n        <Link to={ `#${ pageIndex + 1 }` }>\n          <MorePostsLink>\n            Older Posts...\n          </MorePostsLink>\n        </Link>\n      }\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 240)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}